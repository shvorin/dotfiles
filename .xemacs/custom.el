(custom-set-variables
 '(Manual-snip-subchapter nil t)
 '(TeX-outline-extra nil)
 '(asm-comment-char ?\#)
 '(auto-mode-alist (quote (("\\.C$" . c++-mode) ("\\.c$" . c-mode) ("\\.ec$" . c-mode) ("\\.cc$" . c++-mode) ("\\.cxx$" . c++-mode) ("\\.cpp$" . c++-mode) ("\\.ic$" . c++-mode) ("\\.idl$" . idl-mode) ("\\.hxx$" . c++-mode) ("\\.hh$" . c++-mode) ("\\.eh$" . c-mode) ("\\.hpp$" . c++-mode) ("\\.ih$" . c++-mode) ("\\.java$" . java-mode) ("\\.tk$" . tcl-mode) ("\\.tcl$" . tcl-mode) ("\\.doc$" . text-mode) ("Makefile$" . makefile-mode) ("makefile$" . makefile-mode) ("Makefile.*$" . makefile-mode) ("makefile.*$" . makefile-mode) ("\\.html$" . hm--html-mode) ("\\.shtml$" . hm--html-mode) ("\\.htm$" . hm--html-mode) ("\\.y$" . c++-mode) ("\\.lex$" . sml-lex-mode) ("\\.il$" . emacs-lisp-mode) (".emacs*" . emacs-lisp-mode) ("\\.sml$" . sml-mode) ("\\.sig$" . sml-mode) ("\\.ML$" . sml-mode) ("\\.smlp$" . sml-mode) ("\\.sigp$" . sml-mode) ("\\.xrdb$" . xrdb-mode) ("[Cc]hange[Ll]og\\(\\..*\\)?$" . change-log-mode) ("\\.\\([pP][Llm]\\|al\\)$" . perl-mode) ("\\.sawfish/rc$" . sawfish-mode) ("\\.jl$" . sawfish-mode) ("\\.sawfishrc$" . sawfish-mode) ("/debian/[^/]*emacsen-startup\\'" . emacs-lisp-mode) ("^/usr/share/doc/.*/README.Debian.*$" . readme-debian-mode) ("debian/.*README.Debian$" . readme-debian-mode) ("^/usr/share/doc/.*/copyright" . debian-copyright-mode) ("debian/.*copyright$" . debian-copyright-mode) ("/debian/control\\'" . debian-control-mode) ("changelog.dch" . debian-changelog-mode) ("changelog.Debian.gz" . debian-changelog-mode) ("changelog.Debian" . debian-changelog-mode) ("/debian/changelog\\'" . debian-changelog-mode) ("NEWS.Debian.gz" . debian-changelog-mode) ("NEWS.Debian" . debian-changelog-mode) ("\\.deb$" . deb-view-mode) ("sources.list$" . apt-sources-mode) ("\\.at\\'" . autotest-mode) ("\\.ac\\'\\|configure\\.in\\'" . autoconf-mode) ("\\.tar$" . tar-mode) ("\\.xml$" . xml-mode) ("\\.shtm$" . html-mode) ("\\.htm$" . html-mode) ("\\.shtml$" . html-mode) ("\\.html$" . html-mode) ("\\.\\(?:xsl\\|fo\\)$" . xsl-mode) ("\\.ad\\'" . xrdb-mode) ("[./\\]X\\(defaults\\|environment\\|resources\\|modmap\\)\\'" . xrdb-mode) ("\\.xpm$" . xpm-mode) ("\\.\\(xpm\\|XPM\\)\\'" . image-mode) ("\\.\\(xbm\\|XBM\\)\\'" . image-mode) ("\\.\\(tiff?\\|TIFF?\\)\\'" . image-mode) ("\\.\\(jpe?g\\|JPE?G\\)\\'" . image-mode) ("\\.\\(gif\\|GIF\\)\\'" . image-mode) ("\\.\\(png\\|PNG\\)\\'" . image-mode) ("\\.css$" . css-mode) ("access\\.conf$" . apache-mode) ("srm\\.conf$" . apache-mode) ("httpd\\.conf$" . apache-mode) ("\\.htaccess$" . apache-mode) ("\\.grm\\'" . sml-yacc-mode) ("\\.cm\\'" . sml-cm-mode) ("\\.s\\(ml\\|ig\\)\\'" . sml-mode) ("\\.si\\(v\\|eve\\)\\'" . sieve-mode) ("\\.rb$" . ruby-mode) ("\\.sql$" . sql-mode) ("\\.spec$" . rpm-spec-mode) ("\\.inc\\'" . php-mode) ("\\.phtml\\'" . php-mode) ("\\.php[s34]?\\'" . php-mode) ("\\.am\\'" . makefile-mode) ("\\(GNU\\)?[Mm]akefile\\(\\.in\\)*\\'" . makefile-mode) ("\\.js$" . javascript-mode) ("\\.\\(diffs?\\|patch\\|rej\\)\\'" . diff-mode) ("configure\\.\\(in\\|ac\\)\\'" . autoconf-mode) ("\\.tar$" . tar-mode) ("\\.ml[iylp]?$" . caml-mode) ("\\.java\\'" . jde-mode) ("\\.l[gh]s$" . literate-haskell-mode) ("\\.\\(?:[gh]s\\|hi\\)$" . haskell-mode) ("\\.docbook$" . docbook-mode) ("\\.te?xt\\'" . text-mode) ("\\.[chi]\\'" . c-mode) ("\\.el\\'" . emacs-lisp-mode) ("\\.\\(?:[CH]\\|cc\\|hh\\)\\'" . c++-mode) ("\\.[ch]\\(pp\\|xx\\|\\+\\+\\)\\'" . c++-mode) ("\\.java\\'" . java-mode) ("\\.idl\\'" . idl-mode) ("\\.f\\(?:or\\)?\\'" . fortran-mode) ("\\.F\\(?:OR\\)?\\'" . fortran-mode) ("\\.[fF]90\\'" . f90-mode) ("\\.\\([pP][Llm]\\|al\\)\\'" . perl-mode) ("\\.py\\'" . python-mode) ("\\.lua\\'" . lua-mode) ("\\.texi\\(?:nfo\\)?\\'" . texinfo-mode) ("\\.ad[abs]\\'" . ada-mode) ("\\.c?l\\(?:i?sp\\)?\\'" . lisp-mode) ("\\.p\\(?:as\\)?\\'" . pascal-mode) ("\\.ltx\\'" . latex-mode) ("\\.[sS]\\'" . asm-mode) ("[Cc]hange.?[Ll]og?\\(?:.[0-9]+\\)?\\'" . change-log-mode) ("\\$CHANGE_LOG\\$\\.TXT" . change-log-mode) ("\\.scm?\\(?:\\.[0-9]*\\)?\\'" . scheme-mode) ("\\.e\\'" . eiffel-mode) ("\\.mss\\'" . scribe-mode) ("\\.m\\(?:[mes]\\|an\\)\\'" . nroff-mode) ("\\.icn\\'" . icon-mode) ("\\.\\(?:[ckz]?sh\\|shar\\)\\'" . sh-mode) ("\\.[Pp][Rr][Oo]\\'" . idlwave-mode) ("/\\.\\(?:bash_\\|z\\)?\\(profile\\|login\\|logout\\)\\'" . sh-mode) ("/\\.\\(?:[ckz]sh\\|bash\\|tcsh\\|es\\|xinit\\|startx\\)rc\\'" . sh-mode) ("/\\.\\(?:[kz]shenv\\|xsession\\)\\'" . sh-mode) ("\\.m?spec$" . sh-mode) ("\\.[123456789]\\'" . nroff-mode) ("\\.[tT]e[xX]\\'" . tex-mode) ("\\.\\(?:sty\\|cls\\|bbl\\)\\'" . latex-mode) ("\\.bib\\'" . bibtex-mode) ("\\.article\\'" . text-mode) ("\\.letter\\'" . text-mode) ("\\.\\(?:tcl\\|exp\\)\\'" . tcl-mode) ("\\.wrl\\'" . vrml-mode) ("\\.awk\\'" . awk-mode) ("\\.prolog\\'" . prolog-mode) ("\\.\\(?:arc\\|zip\\|lzh\\|zoo\\)\\'" . archive-mode) ("\\`/tmp/Re" . text-mode) ("/Message[0-9]*\\'" . text-mode) ("/drafts/[0-9]+\\'" . mh-letter-mode) ("^/tmp/fol/" . text-mode) ("\\.y\\'" . c-mode) ("\\.lex\\'" . c-mode) ("\\.m\\'" . objc-mode) ("\\.oak\\'" . scheme-mode) ("\\.[sj]?html?\\'" . html-mode) ("\\.jsp\\'" . html-mode) ("\\.xml\\'" . xml-mode) ("\\.\\(?:sgml?\\|dtd\\)\\'" . sgml-mode) ("\\.c?ps\\'" . postscript-mode) ("[/\\][._].*emacs\\'" . emacs-lisp-mode) ("\\.m4\\'" . autoconf-mode) ("configure\\(\\.in\\|\\.ac\\)\\'" . autoconf-mode) ("\\.ml\\'" . lisp-mode) ("\\.ma?ke?\\'" . makefile-mode) ("[Mm]akefile\\(\\.\\|\\'\\)" . makefile-mode) ("\\.X\\(defaults\\|environment\\|resources\\|modmap\\)\\'" . xrdb-mode) ("/app-defaults/" . xrdb-mode) ("\\.[^/]*wm2?\\(?:rc\\)?\\'" . winmgr-mode) ("\\.\\(?:jpe?g\\|JPE?G\\|png\\|PNG\\|gif\\|GIF\\|tiff?\\|TIFF?\\)\\'" . image-mode) ("\\.m?spec$" . sh-mode) ("\\.[123456789]\\'" . nroff-mode) ("\\.[123456789]\\'" . nroff-mode) ("\\.m?spec$" . sh-mode) ("\\.vhdl?\\'" . vhdl-mode))) t nil "Additional extensions which indicate files normally handled by cc++-mode are added here.  Files with \"\\\\.smlp$\", \"\\\\.sigp$\" extentions are used by (cpp) prerocessor to generate {sml,sig}-files. (added by art)")
 '(auto-save-directory (expand-file-name "~/.autosave/"))
 '(auto-save-interval 1000)
 '(bbdb-use-pop-up nil)
 '(bbdb/srv-auto-create-p t)
 '(browse-url-browser-function (quote browse-url-galeon) t)
 '(browse-url-new-window-flag t t)
 '(c++-mode-hook (quote (turn-on-font-lock)))
 '(column-number-mode t)
 '(completion-ignored-extensions (quote (".o" ".obj" ".elc" "~" ".bin" ".lbin" ".dvi" ".class" ".uo" ".ui" ".vcproj" ".dsp" ".hi")))
 '(crontab-directory "/var/spool/cron/crontabs")
 '(default-gutter-position (quote top))
 '(default-tty-frame-plist (quote (frame-background-mode (quote dark))) nil nil "ÎÁÄÏ ÓÍÏÔÒÅÔØ ÜÔÏ \"as Lisp expression\", ÉÎÁŞÅ ×ÅËÔÏÒÙ ÎÅ ĞÏËÁÚÙ×ÁÀÔÓÑ...")
 '(delete-key-deletes-forward t)
 '(diff-switches "-u" t)
 '(dired-chown-program "/bin/chown" t)
 '(dired-ls-program "NOLOCALE_ls" t)
 '(display-time-24hr-format t)
 '(fast-lock-cache-directories (quote ("~/.emacs-flc")))
 '(feedmail-confirm-outgoing t)
 '(fill-column 80)
 '(font-latex-title-fontify (quote color))
 '(font-menu-this-frame-only-p nil t)
 '(gnus-activate-level 3)
 '(gnus-article-sort-functions (quote (gnus-article-sort-by-date)))
 '(gnus-auto-expirable-marks (quote (?K ?r ?C ?Y ?O ?R ?F ?M)))
 '(gnus-auto-expirable-newsgroups ".*")
 '(gnus-default-charset (quote koi8-r))
 '(gnus-default-posting-charset (quote koi8-r))
 '(gnus-group-charset-alist (quote (("^hk\\>\\|^tw\\>\\|\\<big5\\>" cn-big5) ("^cn\\>\\|\\<chinese\\>" cn-gb-2312) ("^fj\\>\\|^japan\\>" iso-2022-jp-2) ("^tnn\\>\\|^pin\\>\\|^sci.lang.japan" iso-2022-7bit) ("^relcom\\>" koi8-r) ("^fido7\\>" koi8-r) ("^\\(cz\\|hun\\|pl\\|sk\\|hr\\)\\>" iso-8859-2) ("^israel\\>" iso-8859-1) ("^han\\>" euc-kr) ("^alt.chinese.text.big5\\>" chinese-big5) ("^soc.culture.vietnamese\\>" vietnamese-viqr) ("^\\(comp\\|rec\\|alt\\|sci\\|soc\\|news\\|gnu\\|bofh\\)\\>" iso-8859-1) (".*" koi8-r))))
 '(gnus-group-mode-hook (quote (gnus-topic-mode gnus-xmas-setup-group-toolbar gnus-xmas-group-menu-add)))
 '(gnus-ignored-mime-types (quote ("text/x-vcard")))
 '(gnus-inhibit-user-auto-expire nil)
 '(gnus-message-archive-group (quote ((if (message-news-p) "sent_news" "sent_mail"))))
 '(gnus-permanently-visible-groups "nnml.*\\|archive:.*")
 '(gnus-secondary-select-methods nil)
 '(gnus-secondary-servers nil)
 '(gnus-select-method (quote (nnml "Mail")))
 '(gnus-treat-buttonize t)
 '(gnus-treat-date-local (quote head))
 '(gnus-treat-emphasize t)
 '(gnus-treat-hide-boring-headers (quote head))
 '(gnus-treat-highlight-citation (quote last))
 '(gnus-treat-overstrike (quote last))
 '(gnus-treat-strip-cr (quote last))
 '(gnus-treat-strip-leading-blank-lines (quote last))
 '(gnus-treat-strip-multiple-blank-lines (quote last))
 '(gnus-treat-strip-pem (quote last))
 '(gnus-treat-strip-pgp (quote last))
 '(gnus-treat-strip-trailing-blank-lines (quote last))
 '(gnuserv-frame (quote gnuserv-visible-frame-function) t)
 '(gnuserv-kill-quietly t)
 '(gnuserv-program (concat exec-directory "/gnuserv"))
 '(grep-all-files-omitted-expressions (quote ("*~" "#*" ".#*" ",*" "*.elc" "*.obj" "*.o" "*.exe" "*.dll" "*.lib" "*.a" "*.dvi" "*.class" "*.bin" "*.orig" "*.rej" "*.ui" "*.uo")))
 '(idl-mode-hook (quote (turn-on-font-lock)))
 '(indent-tabs-mode nil)
 '(ispell-dictionary-alist (quote ((nil "[A-Za-z]" "[^A-Za-z]" "[']" nil ("-B") nil iso-8859-1) ("american" "[A-Za-z]" "[^A-Za-z]" "[']" nil ("-B") nil iso-8859-1) ("british" "[A-Za-z]" "[^A-Za-z]" "[']" nil ("-B" "-d" "british") nil iso-8859-1) ("english" "[A-Za-z]" "[^A-Za-z]" "[']" nil ("-B") nil iso-8859-1) ("russian" "[áâ÷çäå³öúéêëìíîïğòóôõæèãşûıøùÿüàñÁÂ×ÇÄÅ£ÖÚÉÊËÌÍÎÏĞÒÓÔÕÆÈÃŞÛİØÙßÜÀÑ]" "[^áâ÷çäå³öúéêëìíîïğòóôõæèãşûıøùÿüàñÁÂ×ÇÄÅ£ÖÚÉÊËÌÍÎÏĞÒÓÔÕÆÈÃŞÛİØÙßÜÀÑ]" "[']" t ("-C" "-d" "russian") "~plaintex" koi8-r))) t)
 '(java-mode-hook (quote (turn-on-font-lock)))
 '(line-number-mode t)
 '(mail-host-address "charm")
 '(mail-source-delete-incoming t)
 '(mail-sources (quote ((file :path "/var/spool/mail/art"))))
 '(mail-user-agent (quote message-user-agent))
 '(mc-passwd-timeout 600 t)
 '(message-default-charset (quote koi8-r))
 '(message-dont-reply-to-names nil)
 '(mm-discouraged-alternatives (quote ("text/html" "text/richtext")))
 '(modeline-3d-p t)
 '(mouse-yank-at-point t)
 '(nnmail-expiry-wait-function (lambda (group) (cond ((string= group "other") 90) ((string= group "mailru") 8) ((string= group "Delivery") 5) ((string= group "root") 5) ((string= group "xelenka") 30) ((string= group "spam") 2) ((string= group "Unexpirable") (quote never)) (t (quote never)))))
 '(nnmail-split-methods (quote (("root" "^To:.*root@xenon.*") ("Delivery" "^From:.*MAILER-DAEMON@.*") ("SC" "\\(\\(^From:\\|^To:\\|^Cc:\\)\\(.*supercompilers.*\\|.*Klimov.*\\)\\|^Subject:.*supercompilers.*\\)") ("xelenka" "^From:.*\\(helena_nik@mail.ru\\|xelenka@rambler.ru\\|helena@xenon.*\\|xelenka@rsuh.ru\\)") ("xemacs" "\\(^From:\\|^To:\\|^Cc:\\).*xemacs-users-ru@xemacs.org.*") ("other" ""))))
 '(nnmail-treat-duplicates (quote delete))
 '(overwrite-mode nil)
 '(permanent-buffers-mode t nil (permanent-buffers))
 '(query-user-mail-address nil)
 '(revert-without-query (quote ("\\.log$")))
 '(sgml-always-quote-attributes t t)
 '(sgml-auto-activate-dtd t t)
 '(sgml-auto-insert-required-elements t t)
 '(sgml-data-directory "/usr/lib/sgml/declaration/" t)
 '(sgml-display-char-list-filename "/usr/lib/sgml/charsets/iso88591.map" t)
 '(sgml-indent-data t t)
 '(sgml-indent-step 2 t)
 '(sgml-live-element-indicator t t)
 '(sgml-local-catalogs (quote ("/usr/lib/sgml/catalog")) t)
 '(sgml-local-ecat-files (quote ("ECAT" "~/sgml/ECAT" "/usr/lib/sgml/ECAT" "/usr/local/lib/sgml/ECAT")) t)
 '(sgml-markup-faces (quote ((start-tag . font-lock-keyword-face) (end-tag . font-lock-keyword-face) (ignored . font-lock-string-face) (ms-start . font-lock-type-face) (ms-end . font-lock-type-face) (shortref . bold) (entity . font-lock-reference-face) (comment . font-lock-comment-face) (pi . font-lock-variable-name-face) (sgml . font-lock-function-name-face) (doctype . font-lock-doc-string-face))) t)
 '(sgml-minimize-attributes nil t)
 '(sgml-omittag nil t)
 '(sgml-public-map (quote ("%S" "/usr/lib/sgml/%S" "/usr/lib/sgml/%o/%c/%d" "/usr/local/lib/sgml/%o/%c/%d")) t)
 '(sgml-set-face (eq (quote x) window-system) t)
 '(sgml-shortag nil t)
 '(sgml-system-identifiers-are-preferred t)
 '(sgml-system-path (quote ("/usr/lib/sgml" "/usr/lib/sgml/cdtd" "/usr/local/lib/sgml")) t)
 '(sgml-tag-region-if-active t t)
 '(sgml-validate-command "nsgmls -e -g -s -u %s %s " t)
 '(sgml-xml-declaration "/usr/lib/sgml/declaration/xml.dcl" t)
 '(smtpmail-auth-credentials nil nil nil "ÅÓÌÉ ÕÓÔÁÎÏ×ÉÔØ × nil, ÔÏ ×ÒÏÄÅ ÄÏÌÖÅÎ ÂÙÔØ ÉÓĞÏÌØÚÏ×ÁÎ ~/.authinfo, ÎÏ ËÁË ÔÏÇÄÁ ÕÚÎÁÔØ username?")
 '(smtpmail-debug-info t)
 '(smtpmail-default-smtp-server "mail.supercompilers.ru")
 '(smtpmail-queue-mail t)
 '(smtpmail-smtp-server nil)
 '(smtpmail-smtp-service 25)
 '(tcl-mode-hook (quote (turn-on-font-lock)))
 '(toolbar-visible-p nil)
 '(try-oblique-before-italic-fonts t)
 '(user-full-name "Artem Shvorin" t)
 '(user-mail-address "artem.shvorin@supercompilers.ru")
 '(vhdl-basic-offset 4)
 '(vhdl-electric-mode nil)
 '(vhdl-indent-tabs-mode nil)
 '(visible-bell (quote top-bottom)))

(custom-set-faces
 '(bbdb-field-name ((t (:size "\"\"" :bold t))) t)
 '(bold ((t (:size "\"\"" :bold t))) t)
 '(ediff-current-diff-face-A ((((type tty)) (:foreground "blue" :background "yellow")) (((class color)) (:foreground "firebrick" :background "pale green")) (t (:inverse-video t))))
 '(ediff-current-diff-face-Ancestor ((((type tty)) (:foreground "black" :background "magenta")) (((class color)) (:foreground "Black" :background "VioletRed")) (t (:inverse-video t))))
 '(ediff-current-diff-face-B ((((type tty)) (:foreground "magenta" :background "yellow" :weight bold)) (((class color)) (:foreground "DarkOrchid" :background "Yellow")) (t (:inverse-video t))))
 '(ediff-current-diff-face-C ((((type tty)) (:foreground "blue" :background "yellow" :weight bold)) (((class color)) (:foreground "Navy" :background "Pink")) (t (:inverse-video t))))
 '(ediff-even-diff-face-A ((((type tty)) (:foreground "red" :background "yellow")) (((type pc)) (:foreground "green3" :background "light grey")) (((class color)) (:foreground "Black" :background "light grey")) (t (:italic t :stipple "Stipple"))))
 '(font-latex-title-1-face ((((class color) (background light)) (:foreground "blue4" :family "helvetica" :bold t))))
 '(font-latex-title-2-face ((((class color) (background light)) (:foreground "blue4" :family "helvetica" :bold t))))
 '(font-latex-title-3-face ((((class color) (background light)) (:foreground "blue4" :family "helvetica" :bold t))))
 '(font-lock-comment-face ((((type tty)) (:foreground "darkgrey")) (((class color) (background dark)) (:foreground "gray80")) (((type mswindows) (class color) (background light)) (:foreground "blue")) (((class color) (background light)) (:foreground "yellow4")) (((class grayscale) (background light)) (:foreground "DimGray" :bold t :italic t)) (((class grayscale) (background dark)) (:foreground "LightGray" :bold t :italic t)) (t (:bold t))))
 '(font-lock-function-name-face ((((class color) (background light)) (:foreground "darkgreen" :bold t))))
 '(font-lock-keyword-face ((((type tty)) (:foreground "cyan")) (((type mswindows) (class color) (background light)) (:foreground "red")) (((class color) (background light)) (:foreground "blue")) (((class grayscale) (background light)) (:foreground "LightGray" :bold t)) (((class grayscale) (background dark)) (:foreground "DimGray" :bold t)) (t (:bold t))))
 '(font-lock-module-def-face ((((type tty)) (:foreground "brightwhite")) (t (:bold t))))
 '(font-lock-reference-face ((((type tty)) (:foreground "red" :underline t)) (((class color) (background dark)) (:foreground "cadetblue2")) (((class color) (background light)) (:foreground "red3")) (((class grayscale) (background light)) (:foreground "LightGray" :bold t :underline t)) (((class grayscale) (background dark)) (:foreground "Gray50" :bold t :underline t))))
 '(font-lock-string-face ((((type tty)) (:foreground "green")) (((class color) (background dark)) (:foreground "tan")) (((class color) (background light)) (:foreground "CornflowerBlue")) (((class grayscale) (background light)) (:foreground "DimGray" :italic t)) (((class grayscale) (background dark)) (:foreground "LightGray" :italic t)) (t (:bold t))))
 '(font-lock-type-def-face ((((type tty)) (:foreground "brightwhite")) (t (:bold t))))
 '(font-lock-type-face ((((type tty)) (:foreground "brightwhite")) (((class color) (background light)) (:foreground "steelblue")) (((class grayscale) (background light)) (:foreground "Gray90" :bold t)) (((class grayscale) (background dark)) (:foreground "DimGray" :bold t)) (t (:bold t))))
 '(font-lock-variable-name-face ((((type tty)) (:foreground "magenta")) (((class color) (background dark)) (:foreground "cyan3")) (((class color) (background light)) (:foreground "magenta4")) (((class grayscale) (background light)) (:foreground "Gray90" :bold t :italic t)) (((class grayscale) (background dark)) (:foreground "DimGray" :bold t :italic t)) (t (:underline t))))
 '(isearch ((((type tty)) (:background "magenta")) (t (:background "pink1"))) t)
 '(isearch-secondary ((((type tty)) (:foreground "red")) (t (:foreground "res3"))) t)
 '(modeline ((((type tty)) nil) (t (:background "snow2"))) t))
